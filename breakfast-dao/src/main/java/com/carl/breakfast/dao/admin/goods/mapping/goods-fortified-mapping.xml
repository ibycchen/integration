<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.carl.breakfast.dao.admin.goods.GoodsFortifiedDaoImpl">
    <!--表明-->
    <sql id="table_name">
        MALL_GOODS
    </sql>

    <resultMap id="BaseResultMap" type="com.carl.breakfast.dao.admin.goods.pojo.GoodsPojo">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NAME" property="name" jdbcType="VARCHAR"/>
        <result column="TITLE" property="title" jdbcType="VARCHAR"/>
        <result column="SUB_TITLE" property="subTitle" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="INTEGER"/>
        <result column="HOT_RANK" property="hotRank" jdbcType="INTEGER"/>
        <result column="STOCK" property="stock" jdbcType="INTEGER"/>
        <result column="SALES" property="sales" jdbcType="INTEGER"/>
        <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR"/>
        <result column="PRICE" property="price" jdbcType="FLOAT"/>
        <result column="GOODS_TYPE" property="goodsType" jdbcType="INTEGER"/>
        <result column="MAIN_IMG_ID" property="goodsType" jdbcType="INTEGER"/>
        <result column="MAIN_IMG_PATH" property="mainImgPath" jdbcType="VARCHAR"/>
        <result column="NOTE" property="note" jdbcType="VARCHAR"/>
        <result column="USE_DATE" property="useDate" jdbcType="TIMESTAMP"/>
        <result column="ON_SALE_TIME" property="onSaleTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 根据搜索条件获取数据 -->
    <sql id="condition_sql">
        <if test="id != null">and ID = #{id,jdbcType=INTEGER}</if>
        <if test="createUser != null and createUser != ''">and CREATE_USER = #{createUser,jdbcType=VARCHAR}</if>
        <if test="name != null and name != ''">and NAME LIKE CONCAT('%','${name}','%' )</if>
        <if test="title != null and title != ''">and TITLE = #{title,jdbcType=VARCHAR}</if>
        <if test="status != null">and STATUS = #{status}</if>
    </sql>

    <!--保存方法-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.carl.breakfast.dao.admin.goods.pojo.GoodsPojo">
        INSERT INTO
        <include refid="table_name"/>
        (ID, NAME, TITLE, SUB_TITLE, STOCK, CREATE_USER, PRICE, GOODS_TYPE, MAIN_IMG_ID, MAIN_IMG_PATH, NOTE)
        VALUES (#{id}, #{name}, #{title}, #{subTitle},#{stock}, #{createUser}, #{price}, #{goodsType}, #{mainImgId},
        #{mainImgPath}, #{note})
    </insert>

    <!--保存方法-->
    <insert id="saveActual" parameterType="com.carl.breakfast.dao.admin.goods.pojo.GoodsPojo">
        INSERT INTO MALL_GOODS_ACTUAL
        (GOODS_ID, STOCK, PRICE, USE_DATE)
        VALUES (#{id}, #{stock}, #{price}, CurDate())
    </insert>

    <!--保存扩展信息-->
    <insert id="saveExt">
        INSERT INTO MALL_GOODS_EXT
        (GOODS_ID, KEY_NAME, KEY_AS, VAL)
        VALUES (#{goodsId}, #{keyName}, #{keyAs}, #{val})
    </insert>

    <!-- 分页查询 -->
    <select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from
        <include refid="table_name"/>
        <where>
            <include refid="condition_sql"/>
        </where>
        order by ON_SALE_TIME desc limit #{pageFirst}, #{pageSize}
    </select>

    <!-- 分页查询时要用到的总数统计 -->
    <select id="listPageCount" parameterType="java.util.Map"
            resultType="java.lang.Long">
        select count(1) from
        <include refid="table_name"/>
        <where>
            <include refid="condition_sql"/>
        </where>
    </select>

    <!--修改状态-->
    <update id="updateState">
        UPDATE
        <include refid="table_name"/>
        SET STATUS = #{status}
        WHERE id = #{goodsId} AND STATUS != #{status}
    </update>

    <!--修改历史保存数据-->
    <update id="insertModify">
        INSERT INTO MALL_GOODS_MODIFY_HIS (
         GOODS_ID, COLUMN_NAME,ORIGINAL_VAL,NEW_VAL,OPERATE_USER,TABLE_NAME
        ) VALUES(#{goodsId}, #{columnName}, #{oldVal}, #{newVal}, #{operateUser}, 'MALL_GOODS')
    </update>

    <select id="selectByPrimaryKey">
        <![CDATA[

        ]]>
        SELECT ID AS id, NAME AS name, TITLE AS title , SUB_TITLE AS subTitle, STOCK AS stock, CREATE_USER AS
        createUser, PRICE AS price,
        GOODS_TYPE AS goodsType, MAIN_IMG_ID AS mainImgId , MAIN_IMG_PATH AS mainImgPath, NOTE AS note
        FROM
        <include refid="table_name"/>
        WHERE ID = #{param1}
    </select>

    <!--详情查询映射-->
    <resultMap id="queryDetail" type="com.carl.breakfast.dao.admin.goods.pojo.GoodsDetail">
        <association column="ID" property="goods" javaType="com.carl.breakfast.dao.admin.goods.pojo.GoodsPojo"
                     resultMap="BaseResultMap">
        </association>
        <collection property="goodsExtList" javaType="java.util.List"
                    ofType="com.carl.breakfast.dao.admin.goods.pojo.GoodsExt">
            <id column="EXT_ID" property="id" jdbcType="INTEGER"/>
            <result column="GOODS_ID" property="goodsId" jdbcType="INTEGER"/>
            <result column="KEY_NAME" property="keyName" jdbcType="VARCHAR"/>
            <result column="KEY_AS" property="keyAs" jdbcType="VARCHAR"/>
            <result column="VAL" property="val" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <!--详细查询-->
    <select id="queryDetail" resultMap="queryDetail">
        SELECT MG.*,mge.ID AS EXT_ID, MGE.GOODS_ID, MGE.KEY_NAME
           MGE.KEY_AS, MGE.VAL
           FROM MALL_GOODS MG
        LEFT JOIN MALL_GOODS_EXT MGE ON MG.ID = MGE.GOODS_ID
        WHERE MG.ID = #{goodsId}
    </select>
</mapper>
